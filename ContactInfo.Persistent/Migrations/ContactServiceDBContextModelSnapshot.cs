// <auto-generated />
using System;
using Contact.ServicePersistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Contact.ServicePersistance.Migrations
{
    [DbContext(typeof(ContactServiceDBContext))]
    partial class ContactServiceDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Contact.ServicePersistent.Entities.ContactInfoEntity", b =>
                {
                    b.Property<Guid>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContactId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("ContactId"), false);

                    b.HasIndex("ContactUuid");

                    b.ToTable("ContactInfoEntity");
                });

            modelBuilder.Entity("ContactInfo.Persistent.Entities.ContactEntity", b =>
                {
                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Firm")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Uuid");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Uuid"));

                    b.ToTable("ContactEntities");
                });

            modelBuilder.Entity("Contact.ServicePersistent.Entities.ContactInfoEntity", b =>
                {
                    b.HasOne("ContactInfo.Persistent.Entities.ContactEntity", "Contact")
                        .WithMany("ContactInfos")
                        .HasForeignKey("ContactUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("ContactInfo.Persistent.Entities.ContactEntity", b =>
                {
                    b.Navigation("ContactInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
